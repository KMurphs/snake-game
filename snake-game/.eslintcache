[{"C:\\PersonalProjects\\snake-game\\snake-game\\src\\index.tsx":"1","C:\\PersonalProjects\\snake-game\\snake-game\\src\\reportWebVitals.ts":"2","C:\\PersonalProjects\\snake-game\\snake-game\\src\\App.tsx":"3","C:\\PersonalProjects\\snake-game\\snake-game\\src\\store\\index.tsx":"4","C:\\PersonalProjects\\snake-game\\snake-game\\src\\login\\index.tsx":"5","C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\index.tsx":"6","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\generalHelpers.ts":"7","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\scrollHelpers.ts":"8","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\useCustomCss_vh.ts":"9","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-misc-controls\\modal.tsx":"10","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\useClickAnimation.ts":"11","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-form-controls\\input-with-moving-label.tsx":"12","C:\\PersonalProjects\\snake-game\\snake-game\\src\\login\\logo.tsx":"13","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-misc-controls\\hamburger-menu-control.tsx":"14","C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\keypad.tsx":"15","C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\board.tsx":"16","C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\utils.ts":"17","C:\\PersonalProjects\\snake-game\\snake-game\\src\\store\\type.ts":"18"},{"size":627,"mtime":1610195425753,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1610195260116,"results":"21","hashOfConfig":"20"},{"size":2730,"mtime":1610434409439,"results":"22","hashOfConfig":"20"},{"size":1986,"mtime":1610434035584,"results":"23","hashOfConfig":"20"},{"size":5270,"mtime":1610358942905,"results":"24","hashOfConfig":"20"},{"size":2636,"mtime":1610434026088,"results":"25","hashOfConfig":"20"},{"size":701,"mtime":1610346593561,"results":"26","hashOfConfig":"20"},{"size":4972,"mtime":1610201624949,"results":"27","hashOfConfig":"20"},{"size":1253,"mtime":1610201624953,"results":"28","hashOfConfig":"20"},{"size":1223,"mtime":1610347122384,"results":"29","hashOfConfig":"20"},{"size":877,"mtime":1610434252502,"results":"30","hashOfConfig":"20"},{"size":2078,"mtime":1610353309694,"results":"31","hashOfConfig":"20"},{"size":4536,"mtime":1610346975432,"results":"32","hashOfConfig":"20"},{"size":544,"mtime":1610399822532,"results":"33","hashOfConfig":"20"},{"size":2412,"mtime":1610434531010,"results":"34","hashOfConfig":"20"},{"size":3727,"mtime":1610436361395,"results":"35","hashOfConfig":"20"},{"size":5853,"mtime":1610432923204,"results":"36","hashOfConfig":"20"},{"size":429,"mtime":1610434115316,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"16wjrny",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\PersonalProjects\\snake-game\\snake-game\\src\\index.tsx",[],["76","77"],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\reportWebVitals.ts",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\App.tsx",["78"],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\store\\index.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\login\\index.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\index.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\generalHelpers.ts",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\scrollHelpers.ts",["79","80"],"// https://javascriptio.com/view/4915713/react-navigation-that-will-smooth-scroll-to-section-of-the-page\r\n// https://codesandbox.io/s/falling-https-jwrj3?file=/src/App.tsx:636-686\r\n// https://stackoverflow.com/a/16171238/9034699\r\n\r\nimport { useEffect, useMemo } from \"react\";\r\n/**\r\n * When using multiple components on the same with different react router 'routes',\r\n * this hook will use (smooth) transition to get to bring the component with 'targetID' to\r\n * the top left of the page.\r\n * \r\n * \r\n * @param  {string} targetID\r\n * @param  {any} clickEvent?\r\n * @param  {string} targetURI?\r\n * @param  {boolean=false} smooth\r\n */\r\nexport const scrollIDIntoViewHelper = (targetID: string, clickEvent?: any, targetURI?: string, smooth: boolean = false)=>{\r\n  \r\n  // We are essentially hijacking the click event which does not really work with react router\r\n  clickEvent && clickEvent.preventDefault && clickEvent.preventDefault();\r\n\r\n  // Scroll element with provided id into view\r\n  const targetElmt = document.getElementById(targetID);\r\n  targetElmt && targetElmt.scrollIntoView(smooth ? { behavior: \"smooth\", block: \"start\" } : { block: \"start\" });\r\n\r\n  // Update the url\r\n  targetURI && window.history.pushState(targetID, targetID, `/${targetURI ? targetURI : targetID}`);\r\n}\r\n\r\n// useEffect(scrollURLIDIntoViewHelper) use with interval?\r\n/**\r\n * When using multiple components on the same with different react router 'routes',\r\n * this hook will use (smooth) transition to get to bring the component with 'targetID' to\r\n * the top left of the page.\r\n * This hook assumes that the route is actually the id of the component to scroll to\r\n * \r\n * @param  {boolean=false} smooth\r\n */\r\nexport const scrollURLIDIntoViewHelper = (smooth: boolean = false)=>{\r\n  \r\n  // This function assumes that the last uri corresponds to the id of the element\r\n  // that must be scrolled into view\r\n  const url = window.location.href.split(\"/\");\r\n  const target = url[url.length - 1];//.toLowerCase();\r\n  const element = document.getElementById(target);\r\n\r\n  // Adjust view to display component with id from uri\r\n  element && element.scrollIntoView(smooth ? { behavior: \"smooth\", block: \"start\" } : { block: \"start\" });\r\n}\r\n\r\n/**\r\n * This function will ensure that the application is redirected to \r\n * the \"uri\" input argument on load/page refresh.\r\n * \r\n * @param  {string=\"Home\"} uri\r\n */\r\nexport const useResetURIOnLoad = (uri: string = \"Home\") => {\r\n  const handleResetURI = () => window.history.pushState(uri, uri, `/${uri}`);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener(\"load\", handleResetURI);\r\n\r\n    return () => {\r\n      // Clean up the listener\r\n      window.removeEventListener(\"load\", handleResetURI);\r\n    };\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Attempts to extract the base URI of the application.\r\n * When used with react router, this is done before react router\r\n * start meddling with the urls.\r\n * \r\n * This function is probably not in its final form. But this will do while\r\n * I find something better instead.\r\n * \r\n * @param  {string=\"/\"} baseAppURI: Optional input if the logic to extract the uri fails.\r\n */\r\nexport const useAppURI = (baseAppURI: string = \"/\") =>{\r\n  const uri = useMemo(()=>{\r\n    const baseCurrURI = window.location.pathname.split(\"/\")[1]\r\n    const uri = (!baseCurrURI || (baseCurrURI === \"\")) ? `/${baseAppURI}` : `/${baseCurrURI}`; \r\n    return uri.replaceAll(\"//\", \"/\");\r\n  }, [1]);\r\n  return uri;\r\n}\r\n/**\r\n * When using react router with github pages and an application that lives at '<host>/baseUri/' , \r\n * refeshing the page causes github to send back a 404 Page.\r\n * This function will make sure to redirect the application the '<host>/baseUri/' after refreshing.\r\n * \r\n * onCondition is provided to avoid performing the redirection when 'condition()' evaluates to false.\r\n * This function is used until I find a better solution.\r\n * \r\n * @param  {string=\"Home\"} baseAppURI\r\n * @param  {()=>boolean} onCondition?\r\n */\r\nexport const useResetToBaseURIOnLoad = (baseAppURI?: string, onCondition?: ()=>boolean) => {\r\n  const uri = useAppURI(baseAppURI || \"/\");\r\n  \r\n  const handleResetURI = () => {\r\n    const condition = onCondition ? onCondition() : true;\r\n    condition && window.history.pushState(uri, uri, `${uri}`)\r\n  };\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener(\"load\", handleResetURI);\r\n\r\n    return () => {\r\n      // Clean up the listener\r\n      window.removeEventListener(\"load\", handleResetURI);\r\n    };\r\n  });\r\n}\r\n// export const useSyncURIAndDisplay = ()=>{\r\n  \r\n//   // This function assumes that the last uri corresponds to the id of the element\r\n//   // that must be scrolled into view\r\n//   let url = window.location.href.split(\"/\");\r\n//   let target = url[url.length - 1].toLowerCase();\r\n//   let element = document.getElementById(target);\r\n\r\n//   // Adjust view to display component with id from uri\r\n//   element && element.scrollIntoView(smooth ? { behavior: \"smooth\", block: \"start\" } : { block: \"start\" });\r\n// }","C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\useCustomCss_vh.ts",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-misc-controls\\modal.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-hooks\\useClickAnimation.ts",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-form-controls\\input-with-moving-label.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\login\\logo.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\custom-misc-controls\\hamburger-menu-control.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\keypad.tsx",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\board.tsx",["81"],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\game\\utils.ts",[],"C:\\PersonalProjects\\snake-game\\snake-game\\src\\store\\type.ts",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":28},{"ruleId":"90","severity":1,"message":"91","line":86,"column":6,"nodeType":"92","endLine":86,"endColumn":9,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":86,"column":7,"nodeType":"95","endLine":86,"endColumn":8},{"ruleId":"90","severity":1,"message":"96","line":36,"column":42,"nodeType":"88","endLine":36,"endColumn":49},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'baseAppURI'. Either include it or remove the dependency array.","ArrayExpression",["99"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","The ref value 'snake.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'snake.current' to a variable inside the effect, and use that variable in the cleanup function.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [baseAppURI]",{"range":"102","text":"103"},[3401,3404],"[baseAppURI]"]